packageName   = "blst"
version       = "0.0.1"
author        = "Status Research & Development GmbH"
description   = "Wrapper for Supranational BLST (BLS signature scheme with BLS12-381 curve)"
license       = "MIT or Apache License 2.0"
srcDir        = "src"

### Dependencies
requires "nim >= 1.2.0"

### Helper functions
proc test(name: string, defaultLang = "c") =
  # TODO, don't forget to change defaultLang to `cpp` if the project requires C++
  if not dirExists "build":
    mkDir "build"
  --run
  switch("out", ("./build/" & name))
  setCommand defaultLang, "tests/" & name & ".nim"

### tasks
task test, "Run all tests":
  test "all_tests"

task gen_bindings, "Generate bindings":
  # Bindings generation strategy:
  # - Need a workaround for _Bool
  # - Use dst/src instead of in/out which are reserved keywords in Nim.
  #   We need to match whole word with \bin\b, otherwise uint or affine will also get replaced
  # - We store in blst_api_candidate for further post-processing
  #   - bool -> int32 / cint / distinct (typemap doesn't work for some reason)
  #   - impblstHdr should use currentSourcePath instead of hardcoding
  exec """toast -n -p --prefix="_" --typemap="bool=int32" -G="@\bin\b=src" -G="@\bout\b=dst" -o=blst/blst_abi_candidate.nim vendor/blst/bindings/blst.h"""
  echo "The autogenerated bindings in \"blst/blst_api_candidate.nim\" needs further post-processing:"
  echo "- The pragma \"impblstHdr\" should use currentSourcePath instead of hardcoding the source"
  echo "- \"bool\" should be replaced by int32, cint or distinct cint (side-channel resistant boolean)"
  echo "\nThen you need to {.compile.} the relevant C/Assembly files and include those bindings."
